{:analyze-call {midje.sweet/tabular marick.midje/tabular}
 :lint-as {clojure.test.check.clojure-test/defspec clojure.core/def
           midje.checking.checkers.defining/defchecker clojure.core/defn
           sea-cucumber.core/defn-inst clojure.core/defn}
 :linters {:unused-binding {:exclude-destructured-as true}
           :consistent-alias {:aliases {camel-snake-kebab.core case
                                        cheshire.core          json
                                        clojure.core.async     async
                                        clojure.set            set
                                        malli.core             m
                                        pencilvester.core      log}}
           :refer-all      {:exclude [clojure.test
                                      midje.sweet]}
           :unresolved-var {:exclude [midje.sweet]}
           :unresolved-symbol {:level   :error
                               :exclude [(midje.sweet/fact
                                          [throws
                                           around
                                           before
                                           after
                                           contains
                                           as-checker
                                           exactly
                                           has
                                           has-sufix
                                           has-prefix
                                           just
                                           one-of
                                           two-of
                                           roughly
                                           truthy
                                           falsey
                                           irrelevant
                                           anything
                                           =>
                                           =not=>
                                           =deny=>
                                           =expands-to=>
                                           =future=>
                                           =contains=>
                                           =streams=>
                                           =throws=>
                                           =test=>
                                           =throw-parse-exception=>])
                                         (midje.sweet/facts
                                          [throws
                                           contains
                                           exactly
                                           has
                                           has-sufix
                                           has-prefix
                                           just
                                           one-of
                                           two-of
                                           roughly
                                           as-checker
                                           truthy
                                           falsey
                                           irrelevant
                                           anything
                                           =>
                                           =not=>
                                           =deny=>
                                           =expands-to=>
                                           =future=>
                                           =contains=>
                                           =streams=>
                                           =throws=>
                                           =test=>
                                           =throw-parse-exception=>])
                                         (midje.sweet/tabular
                                          [throws
                                           contains
                                           exactly
                                           has
                                           has-sufix
                                           has-prefix
                                           just
                                           one-of
                                           two-of
                                           roughly
                                           as-checker
                                           truthy
                                           falsey
                                           irrelevant
                                           anything
                                           =>
                                           =not=>
                                           =deny=>
                                           =expands-to=>
                                           =future=>
                                           =contains=>
                                           =streams=>
                                           =throws=>
                                           =test=>
                                           =throw-parse-exception=>])]}

           :discouraged-var {clojure.core/read-string {:message "Please prefer clojure.edn/read-string"}}
           :discouraged-namespace {sc.api {:message "Please don't leave debugging remnants!"}}
           :docstring-leading-trailing-whitespace {:level :warning}
           :keyword-binding                       {:level :warning}
           :reduce-without-init                   {:level :warning}
           :redundant-fn-wrapper                  {:level :warning}
           :shadowed-var                          {:level :warning}
           :single-key-in                         {:level :warning}
           :unsorted-required-namespaces          {:level :warning}
           :used-underscored-binding              {:level :warning}}}
